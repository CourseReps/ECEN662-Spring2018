<?xml version="1.0"?>

<launch>

  <!-- SETTINGS -->
  <!-- this directory must already exist -->
  <arg name="bag_directory" default="$(env HOME)/data/imu_inertial_nav" />
  <!-- what to call the bag file -->
  <arg name="bag_name" default="imu_inertial_nav.bag" />

  <!-- TOPIC NAMES -->
  <!-- imu topic -->
  <arg name="imu_topic" default="/vectornav/imu" />
  <!-- marker corners -->
  <arg name="corner_topic" default="/aruco/corners" />
  <arg name="mocap_target_topic" default="/vicon/aruco_target/board" />

  <!-- camera image-->
  <arg name="image_topic" default="camera/image_raw" />
  <!-- motion capture topic for IMU -->
  <arg name="mocap_imu_topic" default="/vicon/LENS12NED/LENS_NED" />

  <!-- launch vicon -->
  <include file="$(find vicon_bridge)/launch/vicon.launch" />

  <!-- launch camera -->
  <!-- this is the better driver to run -->
  <!-- <include file="$(find pointgrey_camera_driver)/launch/camera.launch" /> -->
  <!-- but currently we don't have any camera calibration targets which will work with the ROS calibrator -->
  <!-- which means that this pointgrey_camera_driver won't publish a populated /camera_info topic -->
  <!-- which will break Aruco -->
  <!-- so instead use this one -->
  <include file="$(find lasr_ros_pointgrey)/launch/pointgrey.launch"/>
  <!-- it will publish using incorrect /camera_info but it's sort of ok -->

  <!-- launch Aruco -->
  <include file="$(find imu_inertial_nav)/launch/aruco.launch"/>

  <!-- launch imu -->
  <node name="vectornav" pkg="vectornav_ros" type="vn100" output="screen" />

  <!-- save data to bag -->
  <node name="recorder" pkg="rosbag" type="record" output="screen"
      args="-o $(arg bag_directory)/$(arg bag_name)
        $(arg mocap_imu_topic)
        $(arg mocap_target_topic)
        $(arg imu_topic)
        $(arg corner_topic)
        /tf
       " />
</launch>
